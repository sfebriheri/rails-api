# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "Rails API CI"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd "pg_isready -U rails -d rails_test" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 5
    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://rails:password@localhost:5432/rails_test
      BUNDLE_BUILD__NOKOGIRI: "--use-system-libraries"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libpq-dev

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Verify Ruby and Bundler
        run: |
          ruby -v
          bundle -v

      - name: Prepare database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://rails:password@localhost:5432/rails_test
        run: |
          bin/rails db:prepare

      - name: Run tests (RSpec)
        env:
          RAILS_ENV: test
        run: |
          bundle exec rspec --format documentation --format RspecJunitFormatter --out test-results/rspec.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true

      - name: Run RuboCop
        run: bundle exec rubocop --parallel --format progress

      - name: Run Brakeman security scanner
        run: bundle exec brakeman -q -w2 --no-pager

      - name: Run Bundler Audit
        run: |
          bundle exec bundler-audit --update
          bundle exec bundler-audit check
